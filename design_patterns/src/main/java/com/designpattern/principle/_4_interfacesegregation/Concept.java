package com.designpattern.principle._4_interfacesegregation;

/**
 * @author jk
 * @version 1.0.0
 * @create 2020/7/23 17:13
 */
public class Concept {

    /**
     *
     *
     * 4. 接口隔离原则
     *    * 定义: 用多个专门的接口,而不使用单一的总接口,客户端不应该依赖它不需要的接口
     *    * 一个类对一个类的依赖应该建立在最小的接口上
     *    * 建立单一接口,不要建立庞大臃肿的接口
     *    * 尽量细化接口,接口中的方法尽量少
     *    * 注意适度原则,一定要适度
     *    * 优点: 符合我们常说的高内聚低耦合的设计思想,从而使得类具有很好的可读性,可拓展性和可维护性
     *
     *    接口隔离原则（Interface Segregation Principle，ISP）是指用多个专门的接口，
     *    而不使用单一的总接口，客户端不应该依赖它不需要的接口。这个原则指导我们在设计接口时应当注意以下几点：
     *    （1）一个类对另一个类的依赖应该建立在最小的接口之上。
     *    （2）建立单一接口，不要建立庞大臃肿的接口。
     *    （3）尽量细化接口，接口中的方法尽量少（不是越少越好，一定要适度）。
     *
     *   接口隔离原则符合我们常说的高内聚、低耦合的设计思想，可以使类具有很好的可读性、可扩展性和可维护性。
     *   我们在设计接口的时候，要多花时间去思考，要考虑业务模型，包括对以后有可能发生变更的地方还要做一些预判。
     *   所以，对于抽象、对于业务模型的理解是非常重要的。
     *
     */
}
